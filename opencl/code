max_mem_alloc_size = device.get_info(cl.device_info.MAX_MEM_ALLOC_SIZE)
print(f"Max memory allocation size: {max_mem_alloc_size}")

textin_array_size = textin_array.nbytes
trace_array_size = trace_array.nbytes
bestguess_buf_size = 16 * np.dtype(np.uint8).itemsize
cparefs_buf_size = 16 * np.dtype(np.float32).itemsize

print(f"textin_array_size: {textin_array_size}")
print(f"trace_array_size: {trace_array_size}")
print(f"bestguess_buf_size: {bestguess_buf_size}")
print(f"cparefs_buf_size: {cparefs_buf_size}")

import pyopencl as cl

# Get platforms
platforms = cl.get_platforms()

# Get devices for the first platform
devices = platforms[0].get_devices()

# Select the first device
device = devices[0]

# Get the max memory allocation size
max_mem_alloc_size = device.get_info(cl.device_info.MAX_MEM_ALLOC_SIZE)

print(f"Device name: {device.name}")
print(f"Max memory allocation size: {max_mem_alloc_size}")


# Liste aller verfügbaren Geräte
platforms = cl.get_platforms()
devices = []
for platform in platforms:
    devices.extend(platform.get_devices())

# Wählen Sie ein Gerät aus, z.B. das erste in der Liste
selected_device = devices[0]

# Erstellen Sie einen Kontext für das ausgewählte Gerät
ctx = cl.Context([selected_device])
